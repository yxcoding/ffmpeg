/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "string"
#include <android/log.h>
/* Header for class net_yxcoding_ffmpeg_FFmpegUtil */

#define LOGE(...) __android_log_print( ANDROID_LOG_ERROR, "svr", __VA_ARGS__ )

#ifndef _Included_net_yxcoding_ffmpeg_FFmpegUtil
#define _Included_net_yxcoding_ffmpeg_FFmpegUtil
#ifdef __cplusplus
extern "C" {
#endif

char *jstringToChar(JNIEnv *env, jstring jstr) {
    char *rtn = NULL;
    jclass clsstring = env->FindClass("java/lang/String");
    jstring strencode = env->NewStringUTF("GB2312");
    jmethodID mid = env->GetMethodID(clsstring, "getBytes", "(Ljava/lang/String;)[B");
    jbyteArray barr = (jbyteArray) env->CallObjectMethod(jstr, mid, strencode);
    jsize alen = env->GetArrayLength(barr);
    jbyte *ba = env->GetByteArrayElements(barr, JNI_FALSE);
    if (alen > 0) {
        rtn = (char *) malloc(alen + 1);
        memcpy(rtn, ba, alen);
        rtn[alen] = 0;
    }
    env->ReleaseByteArrayElements(barr, ba, 0);
    return rtn;
}

jstring charTojstring(JNIEnv *env, const char *pat) {
    int strLen = strlen(pat);
    jclass jstrObj = (env)->FindClass("java/lang/String");
    jmethodID methodId = (env)->GetMethodID(jstrObj, "<init>", "([BLjava/lang/String;)V");
    jbyteArray byteArray = (env)->NewByteArray(strLen);
    jstring encode = (env)->NewStringUTF("utf-8");

    (env)->SetByteArrayRegion(byteArray, 0, strLen, (jbyte *) pat);

    return (jstring) (env)->NewObject(jstrObj, methodId, byteArray, encode);
}

JNIEXPORT jstring JNICALL Java_net_yxcoding_ffmpeg_FFmpegUtil_ffmpegInfo
        (JNIEnv *, jclass) {

}

JNIEXPORT void JNICALL Java_net_yxcoding_ffmpeg_FFmpegUtil_setCurlDebug
        (JNIEnv *, jclass, jboolean) {

}

#ifdef __cplusplus
}
#endif
#endif
